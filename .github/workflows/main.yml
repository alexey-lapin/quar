on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

env:
  CR_REGISTRY: ghcr.io
  CR_NAMESPACE: ${{ github.repository_owner }}
  CR_USERNAME: ${{ github.actor }}
  CR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        env:
          VITE_APP_PUBLIC_PATH: /quar
        run: npm run build

      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  build-single-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        env:
          VITE_APP_SINGLE_FILE: true
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: quar-dist
          path: dist/*.html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CR_REGISTRY }}
          username: ${{ env.CR_USERNAME }}
          password: ${{ env.CR_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Set tag
        run: echo "TAG=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.CR_REGISTRY }}/${{ env.CR_NAMESPACE }}/quar:latest
            ${{ env.CR_REGISTRY }}/${{ env.CR_NAMESPACE }}/quar:${{ env.TAG }}

  release:
    needs: build-single-file
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: quar-dist
          path: quar-dist

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release create ${{ github.ref_name }}
          --title ${{ github.ref_name }}
          --generate-notes
          --fail-on-no-commits
          quar-dist/*.html
